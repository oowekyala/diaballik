<UserControl x:Class="DiaballikWPF.View.GameCreationScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:DiaballikWPF.ViewModel"
             xmlns:view="clr-namespace:DiaballikWPF.View"
             mc:Ignorable="d"

             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"

             d:DataContext="{d:DesignInstance viewModel:GameCreationScreenViewModel}">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                                <ResourceDictionary
                                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <!--                <ResourceDictionary-->
                <!--                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />-->
                <!--                <ResourceDictionary-->
                <!--                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />-->
                <!--                <ResourceDictionary-->
                <!--                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />-->
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <!--                <ResourceDictionary-->
                <!--                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />-->
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,10,0,0" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Orientation="Vertical" Margin="10">


        <TextBlock Text="Game configuration"
                   Style="{DynamicResource MaterialDesignHeadlineTextBlock}"
                   HorizontalAlignment="Center" />

        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center"
                       Style="{DynamicResource MaterialDesignSubheadingTextBlock}" Text="Player 1" />
            <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center"
                       Style="{DynamicResource MaterialDesignSubheadingTextBlock}" Text="Player 2" />


            <view:PlayerBuilderView Grid.Row="1" Grid.Column="0" DataContext="{Binding PlayerBuilder1}" />
            <view:PlayerBuilderView Grid.Row="1" Grid.Column="1" DataContext="{Binding PlayerBuilder2}" />

        </Grid>

        <Separator Margin="10" />

        <TextBlock Margin="10" HorizontalAlignment="Left"
                   Style="{DynamicResource MaterialDesignSubheadingTextBlock}" Text="Board configuration" />

        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Board size" VerticalAlignment="Center" />
            <Slider Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Width="200" VerticalAlignment="Center"
                    
                    Minimum="5" Value="{Binding Size}" Maximum="17" TickFrequency="2" IsSnapToTickEnabled="True"
                    TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Game scenario" VerticalAlignment="Center" />
            <ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Width="200" VerticalAlignment="Center"
                      ItemsSource="{Binding GameScenarios}" SelectedItem="{Binding Scenario}" >
                <ComboBox.Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <Style.Triggers>
                            <Trigger Property="ComboBox.SelectedValue"  Value="Standard">
                                <Setter Property="ComboBox.ToolTip" Value="abc"/>
                            </Trigger>
                            <Trigger Property="ComboBox.SelectedValue" Value="EnemyAmongUs">
                                <Setter Property="ComboBox.ToolTip" Value="def"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                </ComboBox>


        </Grid>


        <Button Content="Start game"
                Style="{DynamicResource MaterialDesignRaisedButton}"
                Command="{Binding StartGameCommand}"
                HorizontalAlignment="Right"
                ToolTipService.ShowOnDisabled="True">
            <Button.ToolTip>
                <TextBlock Text="{Binding ErrorMessage}" />
            </Button.ToolTip>
        </Button>
    </StackPanel>
</UserControl>